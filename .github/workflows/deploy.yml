name: Deploy Project
on: [push, workflow_dispatch]
jobs: 
  lint:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
        with: 
          repository: ${{github.repository}}
      - name: install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: cache npm 
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
      - name: lint
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
        with: 
          repository: ${{github.repository}}
      - name: install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: cache npm 
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
      - name: run tests
        id: run-tests
        run: npm test
      - name: upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with: 
          name: test-report
          path: test.json
  build: 
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
        with: 
          repository: ${{github.repository}}
      - name: install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: cache npm 
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
      - name: build project
        run: npm run build
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with: 
          name: drop-${{ github.run_id }}-${{ github.run_attempt }}
          path: ./dist
  deploy: 
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    steps: 
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: drop-${{ github.run_id }}-${{ github.run_attempt }}
      - name: deploy project
        run: echo "deploying project"
  failure-notification:
    runs-on: ubuntu-latest
    if: failure()
    steps: 
      - name: send-email
        run: echo "Help! the pipeline is on fire!ðŸ”¥" 

      
